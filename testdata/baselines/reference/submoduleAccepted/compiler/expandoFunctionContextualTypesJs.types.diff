--- old.expandoFunctionContextualTypesJs.types
+++ new.expandoFunctionContextualTypesJs.types
@@= skipped -11, +11 lines =@@
   */
 const MyComponent = () => /* @type {any} */(null);
 >MyComponent : StatelessComponent<MyComponentProps>
->() => /* @type {any} */(null) : { (): any; defaultProps: Partial<MyComponentProps>; }
+>() => /* @type {any} */(null) : { (): any; defaultProps: { color: "red"; }; }
 >(null) : null

 MyComponent.defaultProps = {
@@= skipped -24, +24 lines =@@
  * @type {MyComponentProps}
  */
 MyComponent2.defaultProps = {
->MyComponent2.defaultProps = {    color: "red"} : { color: "red"; }
+>MyComponent2.defaultProps = {    color: "red"} : MyComponentProps
 >MyComponent2.defaultProps : MyComponentProps
 >MyComponent2 : { (): any; defaultProps: MyComponentProps; }
 >defaultProps : MyComponentProps
+>{    color: "red"} : MyComponentProps
 >{    color: "red"} : { color: "red"; }

     color: "red"
@@= skipped -27, +28 lines =@@
 >p : { props: MyComponentProps; }

 function foo() {
->foo : typeof foo
+>foo : () => void

     /**
      * @type {MyComponentProps}
      */
     this.props = { color: "red" };
->this.props = { color: "red" } : { color: "red"; }
->this.props : MyComponentProps
->this : this
->props : MyComponentProps
+>this.props = { color: "red" } : MyComponentProps
+>this.props : any
+>this : any
+>props : any
+>{ color: "red" } : MyComponentProps
 >{ color: "red" } : { color: "red"; }
 >color : "red"
 >"red" : "red"
@@= skipped -17, +18 lines =@@
     expectLiteral(this);
 >expectLiteral(this) : void
 >expectLiteral : (p: { props: MyComponentProps; }) => void
->this : this
+>this : any
 }

 /**
@@= skipped -9, +9 lines =@@
 module.exports = {
 >module.exports = {    color: "red"} : MyComponentProps
 >module.exports : MyComponentProps
->module : { exports: MyComponentProps; }
+>module : { export=: MyComponentProps; }
 >exports : MyComponentProps
+>{    color: "red"} : MyComponentProps
 >{    color: "red"} : { color: "red"; }

     color: "red"
@@= skipped -15, +16 lines =@@
 >{ props: module.exports } : { props: MyComponentProps; }
 >props : MyComponentProps
 >module.exports : MyComponentProps
->module : { exports: MyComponentProps; }
+>module : { export=: MyComponentProps; }
 >exports : MyComponentProps
